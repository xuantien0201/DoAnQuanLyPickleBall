import { db } from "../../../config/db.js";

export async function getXeVeByDate(req, res) {
  try {
    const { date } = req.query;

    console.log("üîç To√†n b·ªô query params:", req.query);
    console.log("üìÖ Gi√° tr·ªã nh·∫≠n ƒë∆∞·ª£c c·ªßa date:", date);

    if (!date) {
      return res.status(400).json({ message: "Thi·∫øu tham s·ªë 'date' (yyyy-mm-dd)" });
    }

    // üëâ T·∫°o kho·∫£ng th·ªùi gian trong ng√†y theo m√∫i gi·ªù VN (+07:00)
    const startOfDay = new Date(`${date}T00:00:00+07:00`);
    const endOfDay = new Date(`${date}T23:59:59+07:00`);

    console.log("üïê Kho·∫£ng th·ªùi gian t√¨m ki·∫øm:", startOfDay, "->", endOfDay);

    // üëâ Truy v·∫•n trong kho·∫£ng ng√†y thay v√¨ so s√°nh ch√≠nh x√°c (tr√°nh sai m√∫i gi·ªù)
    const sql = `
      SELECT * 
      FROM tbl_xeve_sukien 
      WHERE NgayToChuc BETWEEN ? AND ?
    `;
    console.log("üìú SQL:", sql);

    const [rows] = await db.execute(sql, [startOfDay, endOfDay]);

    console.log("üì¶ K·∫øt qu·∫£ truy v·∫•n:", rows.length, "s·ª± ki·ªán");

    if (rows.length === 0) {
      return res.status(404).json({ message: "Kh√¥ng c√≥ s·ª± ki·ªán n√†o trong ng√†y n√†y." });
    }

    // üëâ Chuy·ªÉn ƒë·ªïi NgayToChuc sang m√∫i gi·ªù VN khi tr·∫£ v·ªÅ
    const formattedRows = rows.map(row => ({
      ...row,
      NgayToChuc: new Date(row.NgayToChuc).toLocaleString("sv-SE", {
        timeZone: "Asia/Ho_Chi_Minh"
      })
    }));

    res.json(formattedRows);
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y s·ª± ki·ªán theo ng√†y:", err);
    res.status(500).json({ message: "L·ªói m√°y ch·ªß.", error: err.message });
  }
}
